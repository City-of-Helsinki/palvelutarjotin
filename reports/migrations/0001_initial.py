# Generated by Django 3.2.5 on 2021-11-24 08:48

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("occurrences", "0035_add_enrolment_updated_at_field"),
    ]

    operations = [
        migrations.CreateModel(
            name="EnrolmentReport",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated_at"),
                ),
                (
                    "study_group_unit_id",
                    models.CharField(
                        max_length=255, null=True, verbose_name="study group's unit id"
                    ),
                ),
                (
                    "study_group_amount_of_children",
                    models.PositiveSmallIntegerField(
                        verbose_name="amount of the children in the study group"
                    ),
                ),
                (
                    "study_group_amount_of_adult",
                    models.PositiveSmallIntegerField(
                        default=0,
                        verbose_name="amount of the adults in the study group",
                    ),
                ),
                (
                    "study_group_study_levels",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=django.contrib.postgres.fields.ArrayField(
                            base_field=models.CharField(max_length=255), size=2
                        ),
                        size=None,
                        verbose_name="study levels of the study group",
                    ),
                ),
                (
                    "study_group_unit_position",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.DecimalField(decimal_places=6, max_digits=9),
                        null=True,
                        size=2,
                        verbose_name="coordinates of the study group unit",
                    ),
                ),
                (
                    "study_group_unit_divisions",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200),
                        help_text="Open Civic Data identifiers",
                        null=True,
                        size=None,
                        verbose_name="study group unit divisions",
                    ),
                ),
                ("enrolment_time", models.DateTimeField(verbose_name="enrolment time")),
                (
                    "enrolment_status",
                    models.CharField(max_length=255, verbose_name="enrolment status"),
                ),
                (
                    "occurrence_place_id",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="place id"
                    ),
                ),
                (
                    "occurrence_place_position",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.DecimalField(decimal_places=6, max_digits=9),
                        null=True,
                        size=2,
                        verbose_name="coordinates of the event occurrence place",
                    ),
                ),
                (
                    "occurrence_place_divisions",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200),
                        help_text="Open Civic Data identifiers",
                        null=True,
                        size=None,
                        verbose_name="divisions of the occurrence place",
                    ),
                ),
                (
                    "occurrence_languages",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=django.contrib.postgres.fields.ArrayField(
                            base_field=models.CharField(max_length=255), size=2
                        ),
                        size=None,
                        verbose_name="languages of the occurrence",
                    ),
                ),
                (
                    "occurrence_cancelled",
                    models.BooleanField(
                        verbose_name="cancelled status of the occurrence"
                    ),
                ),
                (
                    "occurrence_amount_of_seats",
                    models.PositiveSmallIntegerField(
                        verbose_name="amount of the seats in the occurrence"
                    ),
                ),
                (
                    "occurrence_start_time",
                    models.DateTimeField(verbose_name="occurrence start time"),
                ),
                (
                    "occurrence_end_time",
                    models.DateTimeField(verbose_name="occurrence end time"),
                ),
                (
                    "linked_event_id",
                    models.CharField(max_length=255, verbose_name="linked event id"),
                ),
                (
                    "enrolment_start_time",
                    models.DateTimeField(
                        null=True, verbose_name="enrolment start time"
                    ),
                ),
                (
                    "enrolment_externally",
                    models.BooleanField(
                        default=False, verbose_name="external enrolments"
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        max_length=512, null=True, verbose_name="provider"
                    ),
                ),
                (
                    "publisher",
                    models.CharField(
                        help_text="a primary name of the publisher, e.g. a legally recognized name",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "keywords",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=django.contrib.postgres.fields.ArrayField(
                            base_field=models.CharField(max_length=255), size=2
                        ),
                        null=True,
                        size=None,
                        verbose_name="keywords",
                    ),
                ),
                (
                    "distance_from_unit_to_event_place",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=9,
                        null=True,
                        verbose_name="distance from unit to event place",
                    ),
                ),
                (
                    "_enrolment",
                    models.OneToOneField(
                        db_column="enrolment_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="occurrences.enrolment",
                    ),
                ),
                (
                    "_occurrence",
                    models.ForeignKey(
                        db_column="occurrence_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="occurrences.occurrence",
                    ),
                ),
                (
                    "_study_group",
                    models.ForeignKey(
                        db_column="study_group_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="occurrences.studygroup",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
