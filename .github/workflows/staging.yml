name: Build & Staging
on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  CONTAINER_REGISTRY: ghcr.io
  CONTAINER_REGISTRY_USER: ${{ secrets.GHCR_CONTAINER_REGISTRY_USER }}
  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.GHCR_TOKEN }}
  CONTAINER_REGISTRY_REPO: ghcr.io/city-of-helsinki/${{ github.event.repository.name }}
  REPO_NAME: ${{ github.event.repository.name }}
  KUBECONFIG_RAW: ${{ secrets.KUBECONFIG_RAW_STAGING }}
  BUILD_ARTIFACT_FOLDER: 'build_artifacts'
  SERVICE_ARTIFACT_FOLDER: 'service_artifacts'
  APP_MIGRATE_COMMAND: /app/.prod/on_deploy.sh
  K8S_REQUEST_CPU: 70m
  K8S_REQUEST_RAM: 200Mi
  K8S_LIMIT_CPU: 200m
  K8S_LIMIT_RAM: 800Mi
  # horizontal pod autoscaler
  K8S_HPA_ENABLED: true
  K8S_HPA_MAX_REPLICAS: 4
  K8S_HPA_MIN_REPLICAS: 2
  K8S_HPA_MAX_CPU_AVG: 100 # 100% from request
#  K8S_HPA_MAX_RAM_AVG: 80 # 80% from request

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v2
      - name: Build
        uses: andersinno/kolga-build-action@v2

  staging:
    runs-on: ubuntu-latest
    needs: build
    name: Staging

    # allow only one deployment at a time
    concurrency: ${{ github.workflow }}-${{ github.ref }}

    steps:
      - uses: actions/checkout@v2
      - uses: andersinno/kolga-setup-action@v2

      - name: Deploy
        uses: andersinno/kolga-deploy-action@v2
        with:
          track: 'staging'
        env:
          K8S_NAMESPACE: ${{ secrets.K8S_NAMESPACE_STAGING }}
          ENVIRONMENT_URL: https://${{ secrets.ENVIRONMENT_URL_STAGING }}
          K8S_SECRET_ENVIRONMENT_URL: https://${{ secrets.ENVIRONMENT_URL_STAGING }}
          K8S_SECRET_ALLOWED_HOSTS: "*"
          K8S_SECRET_CORS_ORIGIN_ALLOW_ALL: 1
          K8S_SECRET_SECRET_KEY: ${{ secrets.GH_QA_DJANGO_SECRET_KEY }}
          K8S_SECRET_SKIP_DATABASE_CHECK: 1
          K8S_SECRET_TOKEN_AUTH_AUTHSERVER_URL: "https://tunnistamo.test.kuva.hel.ninja/openid"
          K8S_SECRET_ILMOITIN_QUEUE_NOTIFICATIONS: 1
          K8S_SECRET_MAIL_MAILGUN_KEY: ${{ secrets.SECRET_GH_QA_MAILGUN_API_KEY }}
          K8S_SECRET_MAIL_MAILGUN_DOMAIN: "hel.fi"
          K8S_SECRET_MAIL_MAILGUN_API: "https://api.eu.mailgun.net/v3"
          K8S_SECRET_MAILER_EMAIL_BACKEND: "anymail.backends.mailgun.EmailBackend"
          K8S_SECRET_DEFAULT_FROM_EMAIL: "no-reply@hel.fi"
          K8S_SECRET_SENTRY_DSN: ${{ secrets.GH_SENTRY_DNS }}
          K8S_SECRET_SENTRY_ENVIRONMENT: "test"
          K8S_SECRET_ENABLE_GRAPHIQL: 1
          K8S_SECRET_LINKED_EVENTS_API_ROOT: "https://api.hel.fi/linkedevents-test/v1/"
          K8S_SECRET_LINKED_EVENTS_API_KEY: ${{ secrets.GH_QA_LINKED_EVENTS_API_KEY }}
          K8S_SECRET_LINKED_EVENTS_DATA_SOURCE: "palvelutarjotin"
          K8S_SECRET_SERVICEMAP_API_ROOT: "https://api.hel.fi/servicemap/v2/unit/"
          K8S_SECRET_NOTIFICATION_SERVICE_API_TOKEN: ${{ secrets.GH_QA_NS_API_TOKEN }}
          K8S_SECRET_NOTIFICATION_SERVICE_API_URL: ${{ secrets.GH_QA_NS_API_URL }}
          K8S_SECRET_CAPTCHA_ENABLED: ${{ secrets.GH_QA_CAPTCHA_ENABLED }}
          K8S_SECRET_RECAPTCHA_SECRET_KEY: ${{ secrets.GH_QA_RECAPTCHA_SECRET_KEY }}
          K8S_SECRET_KEYWORD_SET_CATEGORY_ID: ${{ secrets.GH_QA_KEYWORD_SET_CATEGORY_ID }}
          K8S_SECRET_KEYWORD_SET_ADDITIONAL_CRITERIA_ID: ${{ secrets.GH_QA_KEYWORD_SET_ADDITIONAL_CRITERIA_ID }}
          K8S_SECRET_KEYWORD_SET_TARGET_GROUP_ID: ${{ secrets.GH_QA_KEYWORD_SET_TARGET_GROUP_ID }}
          K8S_SECRET_KULTUS_PROVIDER_UI_BASE_URL: "https://palvelutarjotin-admin.test.kuva.hel.ninja/"
          K8S_SECRET_KULTUS_TEACHER_UI_BASE_URL: "https://palvelutarjotin.test.kuva.hel.ninja/"
          K8S_SECRET_CREATE_SUPERUSER: 0
          K8S_SECRET_ENABLE_SUMMARY_REPORT: 1
          K8S_SECRET_TOKEN_AUTH_ACCEPTED_AUDIENCE: "https://api.hel.fi/auth/palvelutarjotin"
          K8S_SECRET_TOKEN_AUTH_ACCEPTED_SCOPE_PREFIX: "palvelutarjotin"
          K8S_SECRET_DATABASE_HOST: ${{ secrets.K8S_SECRET_DATABASE_HOST_STAGING }}
          K8S_SECRET_DATABASE_URL: ${{ secrets.K8S_SECRET_DATABASE_URL_STAGING }}
          K8S_SECRET_DATABASE_PORT: ${{ secrets.K8S_SECRET_DATABASE_PORT_STAGING }}
          K8S_SECRET_DATABASE_DB: ${{ secrets.K8S_SECRET_DATABASE_DB_STAGING }}
          K8S_SECRET_DATABASE_USERNAME: ${{ secrets.K8S_SECRET_DATABASE_USERNAME_STAGING }}
          K8S_SECRET_DATABASE_PASSWORD: ${{ secrets.K8S_SECRET_DATABASE_PASSWORD_STAGING }}

      - name: Deploy Send Mail Cronjob
        uses: City-of-Helsinki/setup-cronjob-action@main
        with:
          image_repository: ghcr.io/city-of-helsinki/${{ github.event.repository.name }}
          image_tag:  ${{ github.sha }}
          secret_name: "project-staging-palvelutarjotin-secret"
          name: "send-mail"
          kubeconfig_raw: ${{ secrets.KUBECONFIG_RAW_STAGING}}
          target_namespace: ${{ secrets.K8S_NAMESPACE_STAGING }}
          schedule: '* * * * *' # once per 1 minute
          command: "{/app/manage.py}"
          args: "{send_mail}"

      - name: Deploy Retry Deferred Mail Cronjob
        uses: City-of-Helsinki/setup-cronjob-action@main
        with:
          image_repository: ghcr.io/city-of-helsinki/${{ github.event.repository.name }}
          image_tag:  ${{ github.sha }}
          secret_name: "project-staging-palvelutarjotin-secret"
          name: "retry-deferred"
          kubeconfig_raw: ${{ secrets.KUBECONFIG_RAW_STAGING}}
          target_namespace: ${{ secrets.K8S_NAMESPACE_STAGING }}
          schedule: '*/20 * * * *' # once per 20 minutes
          command: "{/app/manage.py}"
          args: "{retry_deferred}"

      - name: Deploy Send Enrolment Summary Email Cronjob
        uses: City-of-Helsinki/setup-cronjob-action@main
        with:
          image_repository: ghcr.io/city-of-helsinki/${{ github.event.repository.name }}
          image_tag:  ${{ github.sha }}
          secret_name: "project-staging-palvelutarjotin-secret"
          name: "send-enrolment-summary"
          kubeconfig_raw: ${{ secrets.KUBECONFIG_RAW_STAGING}}
          target_namespace: ${{ secrets.K8S_NAMESPACE_STAGING }}
          schedule: '0 8 * * *' # every day 8 AM
          command: "{/app/manage.py}"
          args: "{send_enrolment_summary}"

      - name: Deploy Clean Invalid Token Cronjob
        uses: City-of-Helsinki/setup-cronjob-action@main
        with:
          image_repository: ghcr.io/city-of-helsinki/${{ github.event.repository.name }}
          image_tag:  ${{ github.sha }}
          secret_name: "project-staging-palvelutarjotin-secret"
          name: "clean-invalid-tokens"
          kubeconfig_raw: ${{ secrets.KUBECONFIG_RAW_STAGING}}
          target_namespace: ${{ secrets.K8S_NAMESPACE_STAGING }}
          schedule: '0 8 * * *' # every day 8 AM
          command: "{/app/manage.py}"
          args: "{clean_invalid_tokens}"

      - name: Deploy Sync Enrolment Report Table Cronjob
        uses: City-of-Helsinki/setup-cronjob-action@main
        with:
          image_repository: ghcr.io/city-of-helsinki/${{ github.event.repository.name }}
          image_tag:  ${{ github.sha }}
          secret_name: "project-staging-palvelutarjotin-secret"
          name: "sync-enrolment-reports"
          kubeconfig_raw: ${{ secrets.KUBECONFIG_RAW_STAGING}}
          target_namespace: ${{ secrets.K8S_NAMESPACE_STAGING }}
          schedule: '0 2 * * *' # every day 2 AM
          command: "{/app/manage.py}"
          args: "{sync_enrolment_reports}"
